# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CreatePokemonDto {
  id: String!
  name: String!
  type: String!
  pokedex: Int!
}

type PostCommentEntity {
  id: String!
  userId: String!
  userName: String!
  comment: String!
  posts: CelestialPost
  postsId: String!
}

type PostLikeEntity {
  id: String!
  userId: String!
  userName: String!
  like: Boolean!
  posts: CelestialPost
}

type CelestialPost {
  id: String!
  userId: String!
  description: String!
  imageLink: String!
  users: UserEntity
  comments: [PostCommentEntity!]
  likes: [PostLikeEntity!]
}

type UserEntity {
  id: String!
  email: String!
  firstname: String!
  lastname: String!
  username: String!
  password: String!
  contact: Int!
  celestialPosts: [CelestialPost!]
}

type CreateUserDto {
  id: String!
  email: String!
  username: String!
  firstname: String!
  lastname: String!
  password: String!
  contact: Int!
}

type UserAuthModel {
  token: String!
  user: CreateUserDto!
}

type CelestialPostModel {
  id: String!
  userId: String!
  description: String!
  imageLink: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  pokemon: [CreatePokemonDto!]!
  getPokemon(id: String!): CreatePokemonDto!
  getUsers: [UserEntity!]!
  getUser(id: String!): UserEntity!
  getPosts: [CelestialPost!]!
  getPost(id: String!): CelestialPostModel!
  getComments: [PostLikeEntity!]!
  getComment(id: String!): PostLikeEntity!
}

type Mutation {
  updatePokemon(id: String!, updatePokemonInput: UpdatePokemonInput!): CreatePokemonDto!
  deletePokemon(id: String!): CreatePokemonDto!
  createPokemon(data: inputPokemon!): CreatePokemonDto!
  createUser(createUserInput: userInput!): CreateUserDto!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): CreateUserDto!
  deleteUser(id: String!): CreateUserDto!
  userSignIn(email: String!, password: String!): UserAuthModel!
  createPost(celestialPostData: CreateCelestialPostDto!): CelestialPostModel!
  deletePost(id: String!): CelestialPostModel!
  updatePost(id: String!, updateCelestialPost: CreateCelestialPostDto!): CelestialPostModel!
  createComment(createCommentInput: CreatePostCommentDto!): PostCommentEntity!
  updateComment(id: String!, updateCommentInput: UpdatePostCommentDto!): PostCommentEntity!
  deleteComment(id: String!): PostCommentEntity!
  createLike(createPostLikeInput: CreatePostLikeDto!): PostLikeEntity!
  updateLike(id: String!, updatePostLikeInput: UpdatePostLikeDto!): PostLikeEntity!
  deleteLike(id: String!): PostLikeEntity!
}

input UpdatePokemonInput {
  name: String!
  type: String!
  pokedex: Int!
}

input inputPokemon {
  name: String!
  type: String!
  pokedex: Int!
}

input userInput {
  email: String!
  username: String!
  firstname: String!
  lastname: String!
  password: String!
  contact: Int!
}

input UpdateUserInput {
  email: String!
  username: String!
  firstname: String!
  lastname: String!
  password: String!
  contact: Int!
}

input CreateCelestialPostDto {
  userId: String!
  description: String!
  imageLink: String!
}

input CreatePostCommentDto {
  userId: String!
  userName: String!
  comment: String!
  postsId: String!
}

input UpdatePostCommentDto {
  userId: String
  userName: String
  comment: String
  postsId: String
  id: String!
}

input CreatePostLikeDto {
  userId: String!
  userName: String!
  like: Boolean!
}

input UpdatePostLikeDto {
  userId: String
  userName: String
  like: Boolean
  id: String!
}